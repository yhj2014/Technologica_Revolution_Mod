name: Build and Release Forge Mod

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取所有历史记录，有助于版本号生成
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
        cache-write-only: false
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: List build artifacts
      run: find . -name "*.jar" -type f | grep build/libs
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mod-jars
        path: |
          build/libs/*.jar
        retention-days: 5

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: mod-jars
        path: ./artifacts/
    
    - name: List downloaded artifacts
      run: find ./artifacts -name "*.jar" -type f
    
    - name: Get version from build
      id: get_version
      run: |
        # 查找主要的mod jar文件（通常不包含sources或javadoc）
        JAR_FILE=$(find ./artifacts -name "*.jar" -type f ! -name "*sources*" ! -name "*javadoc*" | head -1)
        if [ -z "$JAR_FILE" ]; then
          JAR_FILE=$(find ./artifacts -name "*.jar" -type f | head -1)
        fi
        
        if [ -n "$JAR_FILE" ]; then
          FILENAME=$(basename "$JAR_FILE")
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "FILENAME=$FILENAME" >> $GITHUB_OUTPUT
          
          # 尝试从文件名提取版本号
          VERSION=$(echo "$FILENAME" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1)
          if [ -z "$VERSION" ]; then
            VERSION="1.0.0"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        else
          echo "No JAR files found!"
          exit 1
        fi
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.VERSION }}-${{ github.run_id }}
        release_name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          ./artifacts/*.jar
